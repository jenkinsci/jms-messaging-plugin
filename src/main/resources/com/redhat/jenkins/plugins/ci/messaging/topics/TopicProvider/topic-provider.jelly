<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">

  <!--
     * The MIT License
     *
     * Copyright (c) Red Hat, Inc.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     *
  -->
  <st:once>
    <script type="text/javascript">
      var pmap = {};
      <j:forEach var="provider" items="${app.getDescriptorByName('com.redhat.jenkins.plugins.ci.GlobalCIConfiguration').getConfigs()}" varStatus="loop">
        <j:choose>
          <j:when test="${provider.getTopicProvider() != null}">
            pmap['${provider.getName()}'] = { publisher  : '${h.getCurrentDescriptorByNameUrl()}/${provider.getTopicProvider().getDescriptor().descriptorUrl}/generatePublisherTopic/',
                                              subscriber : '${h.getCurrentDescriptorByNameUrl()}/${provider.getTopicProvider().getDescriptor().descriptorUrl}/generateSubscriberTopic/',
                                              kind       : '${provider.getDescriptor().getDisplayName()}' };
          </j:when>
          <j:otherwise>
            pmap['${provider.getName()}'] = { kind       : '${provider.getDescriptor().getDisplayName()}' };
          </j:otherwise>
        </j:choose>
      </j:forEach>
      function onProviderChange(prov, type) {
          var t = getParentByTag(prov, 'TABLE');
          
          var cb = t.querySelector("tr input[name='_.overrides']");
          var tb = t.querySelector("tr input[name='_.topic']");
          if (pmap[prov.value][type]) {
              var xhttp = new XMLHttpRequest();
              xhttp.onreadystatechange = function() {
                  if (this.readyState == 4 &amp;&amp; this.status == 200) {
                      var topic = xhttp.responseText;
                      if (cb.checked != (topic != "" ? true : false)) {
                          cb.click();
                      }
                      tb.value = topic;
                  }
              };
              xhttp.open("GET", pmap[prov.value][type], true);
              xhttp.send();
          } else {
              if (cb.checked) {
                  cb.click();
              }
              tb.value = "";
          }
          var sel = getParentByTag(getParentByTag(t.querySelector("tr input[name='_.selector']"), 'TR').parentNode, 'TR');
          if (pmap[prov.value]['kind'] == 'FedMsg') {
              sel.style.display = "none";
          } else {
              sel.style.display = "";
          }
      }
      
      function getParentByTag(obj, tag) {
         var pobj = obj;
         while (pobj != null &amp;&amp; pobj.tagName != tag) {
            pobj = pobj.parentNode;
         }
         return pobj;
      }
    </script>
  </st:once>
</j:jelly>
